@using Microsoft.AspNetCore.Identity

@model MappedPaginatedList<DocumentListViewModel>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Ҳуҷҷатҳо";
}

<h2></h2>

@{
    var user = await UserManager.GetUserAsync(User);
    var admin = await UserManager.IsInRoleAsync(user, "Admin");
    var manager = await UserManager.IsInRoleAsync(user, "Manager");
    bool isAdminOrManager = admin || manager;
}

<div class="row">
    <div class="col-md-4">
        <a asp-action="Create" class="btn btn-labeled btn-primary">
            <span class="btn-label">
                <i class="fa fa-plus"></i>
            </span> Илова намудан
        </a>
    </div>
    <div class="col-md-4"></div>
    <form class="col-md-4" asp-controller="Documents" asp-action="Index" method="get">
        <div class="input-group">
            <input type="text" class="form-control" name="q" value="@ViewBag.SearchText" placeholder="Ҷустуҷу...">
            <div class="input-group-append">
                <button class="btn btn-secondary" type="submit">
                    <i class="fa fa-search"></i>
                </button>
            </div>
        </div>
    </form>
</div>

<table class="table">
    <thead class="thead-light">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ItemType.Applicant)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemType.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemType.EntryNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemType.Purpose)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemType.AppointmentNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemType.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemType.Recipient)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ScannedDocuments)
        </th>
        @if (isAdminOrManager)
        {
            <th>
                Тағйир додан
            </th>
        }

    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Applicant)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Purpose)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AppointmentNumber)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Recipient)
            </td>

            <td>
                @foreach (var doc in item.ScannedDocuments)
                {
                    <div>
                        <a asp-action="File" asp-route-id="@doc.Id">@doc.FileName</a>
                    </div>
                }
            </td>
            @if (isAdminOrManager)
            {
                <td class="text-right">
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-light btn-sm">
                        <i class="fa fa-pen"></i>
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-light btn-sm">
                        <i class="fa fa-trash-alt"></i>
                    </a>
                </td>
            }
        </tr>
    }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<ul class="pagination">
    <li class="page-item @prevDisabled">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="page-link" >
            <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span>
        </a>
    </li>
    <li class="page-item @nextDisabled">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           class="page-link">
            <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Next</span>
        </a>
    </li>

</ul>