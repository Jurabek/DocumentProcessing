@using Microsoft.AspNetCore.Identity

@model MappedPaginatedList<DocumentListViewModel>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Ҳуҷҷатҳо";
}

<h2></h2>

@{
    var user = await UserManager.GetUserAsync(User);
    var admin = await UserManager.IsInRoleAsync(user, "Admin");
    var manager = await UserManager.IsInRoleAsync(user, "Manager");
    bool isAdminOrManager = admin || manager;
    int i = 1;
}
<style>
    div#table_filter {
    display: none;
}
    div#table_length {
    position: absolute;
    bottom: 6px;
    right: 25%;
}
    select {
    border: 0;
    border-bottom: 1px solid;
}
    .card {
        box-shadow: 0 2px 5px 0 rgba(0,0,0,.16), 0 2px 10px 0 rgba(0,0,0,.12);
        border: 0;
        font-weight: 400;
        margin-top: 50px;
    }

    #dateFrom {
        border-right: 1px solid silver !important;
    }

    .card.card-cascade.narrower .view.view-cascade {
        margin-left: 4%;
        margin-right: 4%;
        margin-top: -1.25rem;
    }

    .card.card-cascade .view.view-cascade.gradient-card-header {
        padding: 1.6rem 1rem;
        text-align: center;
    }

    #toast-container > div, .card.card-cascade .view.view-cascade.gradient-card-header, .clockpicker-display .clockpicker-display-column #click-am.text-primary, .clockpicker-display .clockpicker-display-column #click-pm.text-primary, .clockpicker-display .clockpicker-display-column .clockpicker-span-hours.text-primary, .clockpicker-display .clockpicker-display-column .clockpicker-span-minutes.text-primary, .darktheme .picker__box .picker__calendar-container .clockpicker-plate .clockpicker-tick, .darktheme .picker__box .picker__date-display .clockpicker-display, .darktheme .picker__box .picker__date-display .clockpicker-display .clockpicker-span-am-pm, .darktheme .picker__box .picker__footer button, .dropdown .dropdown-menu .dropdown-item:active, .dropdown .dropdown-menu .dropdown-item:hover, .dropleft .dropdown-menu .dropdown-item:active, .dropleft .dropdown-menu .dropdown-item:hover, .dropright .dropdown-menu .dropdown-item:active, .dropright .dropdown-menu .dropdown-item:hover, .dropup .dropdown-menu .dropdown-item:active, .dropup .dropdown-menu .dropdown-item:hover, .md-toast-close-button, .md-toast-message a, .md-toast-message label, .picker--focused .picker__list-item--selected, .picker--time .picker__button--clear:focus, .picker--time .picker__button--clear:focus:before, .picker--time .picker__button--clear:hover, .picker--time .picker__button--clear:hover:before, .picker__box .picker__header .picker__date-display, .picker__box .picker__table .picker--focused, .picker__box .picker__table .picker__day--outfocus, .picker__box .picker__table .picker__day--selected, .picker__box .picker__table .picker__day--selected:hover, .picker__date-display, .picker__date-display .clockpicker-display .clockpicker-display-column #click-am.text-primary, .picker__date-display .clockpicker-display .clockpicker-display-column #click-pm.text-primary, .picker__date-display .clockpicker-display .clockpicker-display-column .clockpicker-span-hours.text-primary, .picker__date-display .clockpicker-display .clockpicker-display-column .clockpicker-span-minutes.text-primary, .picker__list-item--selected, .picker__list-item--selected:hover, .side-nav, .side-nav .search-form .form-control, .white-text {
        color: #fff !important;
    }

    .card.card-cascade .view.view-cascade {
        box-shadow: 0 5px 11px 0 rgba(0,0,0,.18), 0 4px 15px 0 rgba(0,0,0,.15);
        border-radius: .25rem;
    }

    .view {
        position: relative;
        overflow: hidden;
        cursor: default;
    }

    .blue-gradient {
        background: linear-gradient(40deg,#45cafc,#303f9f) !important;
    }

    .pb-2, .py-2 {
        padding-bottom: .5rem !important;
    }

    .pt-2, .py-2 {
        padding-top: .5rem !important;
    }

    .ml-4, .mx-4 {
        margin-left: 1.5rem !important;
    }

    .mr-4, .mx-4 {
        margin-right: 1.5rem !important;
    }

    .mb-3, .my-3 {
        margin-bottom: 1rem !important;
    }

    .align-items-center {
        -ms-flex-align: center !important;
        align-items: center !important;
    }

    .justify-content-between {
        -ms-flex-pack: justify !important;
        justify-content: space-between !important;
    }

    .d-flex {
        display: -ms-flexbox !important;
        display: flex !important;
    }

    *, ::after, ::before {
        box-sizing: border-box;
    }

    user agent stylesheet
    div {
        display: block;
    }

    .card {
        box-shadow: 0 2px 5px 0 rgba(0,0,0,.16), 0 2px 10px 0 rgba(0,0,0,.12);
        border: 0;
        font-weight: 400;
    }

    .btn-primary {
        color: #fff;
        background-color: rgba(0, 123, 255, 1);
        border-color: #fff;
    }

    .form-control {
        display: block;
        width: 100%;
        height: calc(2px + 2.25rem);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #fff;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .btn-secondary {
        color: #fff;
        background-color: rgba(0, 123, 255, 1);
        border-color: #fff;
    }

    body {
        font-family: Roboto,sans-serif;
        font-weight: 300;
    }

    body {
        margin: 0;
        font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        text-align: left;
        background-color: #fff;
    }
    button.button-default.xlsx {
    position: fixed;
    bottom: 4%;
    right: 3%;
    height: 80px;
    width: 80px;
    border-radius: 50%;
    background: #007bff;
    color: #fff;
    border-color: #4cacff;
}

    tr {
        display: table-row;
        vertical-align: inherit;
        border-color: inherit;
    }

    .btn-light {
        color: #ffffff;
        background-color: #0069d9;
        border-color: #0069d9;
    }

    .table th {
        padding: 0.75rem;
        vertical-align: top;
        border-top: 1px solid #fff;
    }

    .btn-secondary:hover {
        color: #fff;
        background-color: #0069d9;
        border-color: #0069d9;
    }

    .footer {
        position: inherit;
        bottom: 0;
        width: 100%;
        white-space: nowrap;
        height: 60px;
        line-height: 60px;
    }
</style>
<!-- Table with panel -->
<div class="card card-cascade narrower">

    <!--Card image-->
    <div class="view view-cascade gradient-card-header blue-gradient narrower py-2 mx-4 mb-3 d-flex justify-content-between align-items-center">
        <div class="">
            <a asp-action="Create" class="btn btn-labeled btn-primary">
                <span class="btn-label">
                    <i class="fa fa-plus"></i>
                </span> Илова намудан
            </a>
        </div>
        <div class="col-md-3">
            <form asp-controller="Documents" asp-action="Index" method="get">
                <div class="input-group">
                    <input placeholder="Аз санаи:" data-provide="datepicker" class="form-control" id="dateFrom" name="dateFrom" value="@ViewBag.DateFrom" />
                    <input placeholder="То санаи:" class="form-control" data-provide="datepicker" id="dateFor" name="dateFor" value="@ViewBag.DateFor" />
                    <div class="input-group-append">
                        <button class="btn btn-secondary" type="submit">
                            <i class="fa fa-calendar-check"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>

        <div class="col-md-2">
            <form asp-controller="Documents" asp-action="Index" method="get">
                <div class="input-group">
                    <input type="text" class="form-control" name="q" value="@ViewBag.SearchText" placeholder="Ҷустуҷу...">
                    <div class="input-group-append">
                        <button class="btn btn-secondary" type="submit">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>
            </form>


        </div>

    </div>
    <!--/Card image-->

    <div class="px-4">

        <div class="table-wrapper">
            <!--Table-->
            <table id="table" class="table table-hover mb-0">

                <!--Table head-->
                <thead>
                    <tr>
                        <th>
                            <label class="form-check-label mr-2 label-table" for="checkbox">№</label>
                        </th>
                        <th class="th-lg">
                            @Html.DisplayNameFor(model => model.ItemType.Applicant)
                        </th>
                        <th class="th-lg">
                            @Html.DisplayNameFor(model => model.ItemType.Date)
                        </th>
                        <th class="th-lg">
                            @Html.DisplayNameFor(model => model.ItemType.EntryNumber)
                        </th>
                        <th class="th-lg">
                            @Html.DisplayNameFor(model => model.ItemType.Purpose)
                        </th>
                        <th class="th-lg todelete">
                            @Html.DisplayNameFor(model => model.ItemType.Appointment)
                        </th>
                        <th class="th-lg todelete">
                            @Html.DisplayNameFor(model => model.ItemType.Status)
                        </th>
                        <th class="th-lg">
                            @Html.DisplayNameFor(model => model.ItemType.Recipient)
                        </th>
                        <th class="th-lg todelete">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ScannedDocuments)
                        </th>
                        <th class="th-lg todelete">
                            Тағйир додан
                        </th>

                    </tr>
                </thead>
                <!--Table head-->
                <!--Table body-->
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            @{
                                var rowNo = (Model.PageIndex - 1) * 10 + i;
                                i++;
                            }
                            <td>
                                @rowNo
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Applicant)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EntryNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Purpose)
                            </td>
                            <td class="todelete">
                                @Html.DisplayFor(modelItem => item.Appointment.Title)
                            </td>

                            <td class="todelete">
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Recipient)
                            </td>

                            <td class="todelete">
                                @foreach (var doc in item.ScannedDocuments)
                                {
                                    <div>
                                        <a asp-action="File" asp-route-id="@doc.Id">@doc.FileName</a> - @Html.DisplayFor(modelItem => doc.CreatedDate)
                                    </div>
                                }
                            </td>
                            <td class="text-right todelete">
                                <a asp-action="Print" asp-route-id="@item.Id" target="_blank" class="btn btn-light btn-sm">
                                    <i class="fa fa-print"></i>
                                </a>
                                @if (isAdminOrManager)
                                {

                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-light btn-sm">
                                        <i class="fa fa-pen"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-light btn-sm">
                                        <i class="fa fa-trash-alt"></i>
                                    </a>

                                }
                            </td>
                        </tr>
                    }
                </tbody>
                <!--Table body-->
            </table>

            <!--Table-->
        </div>

    </div>

</div>

<!--<input onclick="exportToExcell()" id="export" class="btn pmd-btn-fab pmd-ripple-effect btn-primary" type="button" value="Экспорт" style="position: fixed; bottom: 2%; right: 3%; height: 85px; border-radius: 52px;">-->
<!-- Table with panel -->
<br>
<br>
<!--
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    var startIndex = Math.Max(Model.PageIndex - 5, 1);
    var finishIndex = Math.Min(Model.PageIndex + 5, Model.TotalPages);
}
<ul class="pagination">
    <li class="page-item @prevDisabled">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex == startIndex)"
           asp-route-q="@ViewBag.SearchText"
           asp-route-dateFrom="@ViewBag.DateFrom"
           asp-route-dateFor="@ViewBag.DateFor"
           class="page-link">
            <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span>
        </a>
    </li>
    <li class="page-item @prevDisabled">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-q="@ViewBag.SearchText"
           asp-route-dateFrom="@ViewBag.DateFrom"
           asp-route-dateFor="@ViewBag.DateFor"
           class="page-link">
            <span aria-hidden="true">&larr;</span>
            <span class="sr-only">Previous</span>
        </a>
    </li>

    @for (var j = startIndex; j <= finishIndex; j++)
    {
        var isActive = Model.PageIndex == j ? "active" : "";

        <li class="page-item @isActive">
            <a sp-action="Index"
               asp-route-pageNumber="@j"
               asp-route-q="@ViewBag.SearchText"
               asp-route-dateFrom="@ViewBag.DateFrom"
               asp-route-dateFor="@ViewBag.DateFor"
               class="page-link">
                @j
            </a>
        </li>
    }

    <li class="page-item @nextDisabled">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-q="@ViewBag.SearchText"
           asp-route-dateFrom="@ViewBag.DateFrom"
           asp-route-dateFor="@ViewBag.DateFor"
           class="page-link">
            <span aria-hidden="true">&rarr;</span>
            <span class="sr-only">Next</span>
        </a>
    </li>
    <li class="page-item @nextDisabled">
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + (finishIndex - Model.PageIndex))"
           asp-route-q="@ViewBag.SearchText"
           asp-route-dateFrom="@ViewBag.DateFrom"
           asp-route-dateFor="@ViewBag.DateFor"
           class="page-link">
            <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Next</span>
        </a>
    </li>

</ul>-->

<asp:ScriptManager ID="ScriptManager1" runat="server"></asp:ScriptManager>
<!-- a ScriptManager is required when working with UpdatePanels -->
